buildscript {
    ext.kotlin_version = '1.9.24'
    repositories {
        mavenCentral()
        //Needed only for SNAPSHOT versions
        //maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.30.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath 'build.buf:buf-gradle-plugin:0.9.0'
    }
}

apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "kotlinx-serialization"
apply plugin: "maven-publish"
apply plugin: "signing"
apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'build.buf'

group = "org.vdaas.vald"
archivesBaseName = "vald-client-java"
version = "1.7.12"
description = "a client library for Vald (https://github.com/vdaas/vald)."

def isDevBuild
def isSnapshotBuild
def isReleaseBuild
def sonatypeRepositoryUrl
def sonatypeUsername = System.getenv('SONATYPE_USERNAME')
def sonatypePassword = System.getenv('SONATYPE_PASSWORD')
def protoDepsPath = "proto_deps"

if (hasProperty("release")) {
    isReleaseBuild = true
    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else if (hasProperty("snapshot")) {
    isSnapshotBuild = true
    version += "-SNAPSHOT"
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
} else {
    isDevBuild = true
    version += "-SNAPSHOT"
}

nexusStaging {
    packageGroup = "org.vdaas.vald"
    stagingProfileId = "24fc47a63d38e2"
    numberOfRetries = 100
    delayBetweenRetriesInMillis = 30000
}

repositories {
    jcenter()
    if (isDevBuild) {
        mavenLocal()
    } else {
        mavenCentral()
    }
}

dependencies {
    implementation 'io.grpc:grpc-stub:1.64.0'
    implementation 'io.grpc:grpc-protobuf:1.64.0'
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.25.1'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'build.buf:protovalidate:0.2.1'

    testImplementation 'org.jetbrains.kotlin:kotlin-stdlib:1.9.24'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testImplementation 'io.grpc:grpc-okhttp:1.64.0'
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams true
        events 'started', 'skipped', 'passed', 'failed'
        exceptionFormat 'full'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
        from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
        from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'vald-client-java'
                packaging = 'jar'
                description = "a client library for Vald (https://github.com/vdaas/vald)."
                url = 'https://github.com/vdaas/vald-client-java'

                scm {
                    url = "scm:git@github.com:vdaas/vald-client-java.git"
                    connection = "scm:git@github.com:vdaas/vald-client-java.git"
                    developerConnection = "scm:git@github.com:vdaas/vald-client-java.git"
                }
                licenses {
                    license {
                        name = 'Apache 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0'
                    }
                }
                developers {
                    developer {
                        id = 'kpango'
                        name = 'Yusuke Kato'
                        email = 'kpango@vdaas.org'
                    }
                    developer {
                        id = 'kmrmt'
                        name = 'Kosuke Morimoto'
                        email = 'ksk@vdaas.org'
                    }
                    developer {
                        id = 'kevindiu'
                        name = 'Kevin Diu'
                        email = 'kevindiu@vdaas.org'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url = sonatypeRepositoryUrl
            credentials {
                username = sonatypeUsername
                password = sonatypePassword
            }
        }
    }
}

signing {
    required { isReleaseBuild }
    if(isReleaseBuild) {
        sign publishing.publications.mavenJava
    }
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
