buildscript {
    ext.kotlin_version = '1.4.32'
    repositories {
        mavenCentral()
        //Needed only for SNAPSHOT versions
        //maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.21.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "kotlinx-serialization"
apply plugin: "maven"
apply plugin: "signing"
apply plugin: 'io.codearte.nexus-staging'

group = "org.vdaas.vald"
archivesBaseName = "vald-client-java"
version = "1.5.2"
description = "a client library for Vald (https://github.com/vdaas/vald)."

def isDevBuild
def isSnapshotBuild
def isReleaseBuild
def sonatypeRepositoryUrl

if (hasProperty("release")) {
    isReleaseBuild = true
    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else if (hasProperty("snapshot")) {
    isSnapshotBuild = true
    version += "-SNAPSHOT"
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
} else {
    isDevBuild = true
    version += "-SNAPSHOT"
}

nexusStaging {
    packageGroup = "org.vdaas.vald"
    stagingProfileId = "24fc47a63d38e2"
    numberOfRetries = 100
    delayBetweenRetriesInMillis = 30000
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.grpc:grpc-stub:1.45.1'
    implementation 'io.grpc:grpc-protobuf:1.45.1'
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.20.0'
    implementation 'io.envoyproxy.protoc-gen-validate:pgv-java-stub:0.6.7'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    testImplementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.20'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'io.grpc:grpc-okhttp:1.45.1'
}


test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams true
        events 'started', 'skipped', 'passed', 'failed'
        exceptionFormat 'full'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
        from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
        from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

signing {
    required { isReleaseBuild }
    sign configurations.archives
}

uploadArchives {
    repositories {
        if (isDevBuild) {
            mavenLocal()
        }
        else {
            mavenDeployer {
                if(isReleaseBuild) {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                }

                repository(url: sonatypeRepositoryUrl) {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                    name 'vald-client-java'
                    packaging 'jar'
                    description "a client library for Vald (https://github.com/vdaas/vald)."
                    url 'https://github.com/vdaas/vald-client-java'

                    scm {
                        url "scm:git@github.com:vdaas/vald-client-java.git"
                        connection "scm:git@github.com:vdaas/vald-client-java.git"
                        developerConnection "scm:git@github.com:vdaas/vald-client-java.git"
                    }
                    licenses {
                        license {
                            name 'Apache 2.0'
                            url 'https://www.apache.org/licenses/LICENSE-2.0'
                        }
                    }
                    developers {
                        developer {
                            id 'kpango'
                            name 'Yusuke Kato'
                            email 'i.can.feel.gravity@gmail.com'
                        }
                        developer {
                            id 'kmrmt'
                            name 'Kosuke Morimoto'
                            email 'kou.morimoto@gmail.com'
                        }
                        developer {
                            id 'rinx'
                            name 'Rintaro Okamura'
                            email 'rintaro.okamura@gmail.com'
                        }
                    }
                }
            }
        }
    }
}
